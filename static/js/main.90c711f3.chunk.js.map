{"version":3,"sources":["index.js"],"names":["regexOperator","lastCharIsOperator","str","length","match","KeyPad","props","handleClick","value","pressButton","id","onClick","this","React","Component","Display","equation","Calculator","state","bind","handleDigits","handleOperator","val","setState","slice","solving","split","console","log","i","String","splice","e","target","handleDecimal","calculate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90c711f3.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nconst regexOperator = /[+\\*\\-\\/]/;\r\n\r\nfunction lastCharIsOperator(str) {\r\n    return str[str.length-1].match(regexOperator);\r\n}\r\n\r\n\r\nclass KeyPad extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleClick = (value) => {\r\n        this.props.pressButton(value);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div id=\"key-pad\" onClick={this.handleClick}>\r\n\r\n                <button id=\"clear\" value=\"clear\">AC</button>\r\n\r\n                <button id=\"divide\" value=\"/\">/</button>\r\n\r\n                <button id=\"multiply\" value=\"*\">*</button>  \r\n\r\n                <button id=\"seven\" value=\"7\">7</button>\r\n\r\n                <button id=\"eight\" value=\"8\">8</button>\r\n\r\n                <button id=\"nine\" value=\"9\">9</button>\r\n\r\n                <button id=\"subtract\" value=\"-\">-</button> \r\n\r\n                <button id=\"four\" value=\"4\">4</button>\r\n\r\n                <button id=\"five\" value=\"5\">5</button>\r\n\r\n                <button id=\"six\" value=\"6\">6</button>\r\n\r\n                <button id=\"add\" value=\"+\">+</button>\r\n\r\n                <button id=\"one\" value=\"1\">1</button>\r\n\r\n                <button id=\"two\" value=\"2\">2</button>\r\n\r\n                <button id=\"three\" value=\"3\">3</button>\r\n\r\n                <button id=\"zero\" value=\"0\">0</button>\r\n\r\n                <button id=\"decimal\" value=\".\">.</button>   \r\n\r\n                <button id=\"equals\" value=\"=\">=</button>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nclass Display extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div id=\"display\"><span id=\"display-align\">{this.props.equation}</span></div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nclass Calculator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            'equation': '0'\r\n        };\r\n\r\n        this.pressButton = this.pressButton.bind(this);\r\n        this.handleDigits = this.handleDigits.bind(this);\r\n        this.handleOperator = this.handleOperator.bind(this);\r\n\r\n    }\r\n\r\n\r\n    handleDigits(val, equation) {\r\n\r\n        if (equation === '0') {\r\n\r\n            this.setState({\r\n                'equation': val\r\n            });\r\n\r\n        }  else if (equation.match(/[+\\*\\-\\/] -$/)) {\r\n\r\n            this.setState({\r\n                'equation': equation + val\r\n            });\r\n\r\n        } \r\n        \r\n        else if (lastCharIsOperator(equation)) {\r\n        \r\n            this.setState({\r\n                'equation': equation + ' ' + val\r\n            });\r\n        \r\n        } else {\r\n\r\n            this.setState({\r\n                equation: equation + val\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    handleOperator(val, equation) {\r\n\r\n        if (equation.match(/[+\\*\\-\\/] -$/)) {\r\n\r\n            if (val === '-') {\r\n\r\n                return;\r\n\r\n            } else {\r\n\r\n                this.setState({\r\n                    'equation': equation.slice(0, equation.length - 3) + val\r\n                })\r\n\r\n            }\r\n        } else if (lastCharIsOperator(equation) && val !== '-') {\r\n\r\n            this.setState({\r\n                'equation': equation.slice(0, equation.length - 1) + val\r\n            });\r\n\r\n        } else {\r\n\r\n            this.setState({\r\n                'equation': equation + ' ' + val\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    handleDecimal(val, equation) {\r\n\r\n        if (equation[equation.length-1] === '-') {\r\n\r\n            this.setState({\r\n                'equation': equation + '0' + val\r\n            })\r\n\r\n        } else if (lastCharIsOperator(equation)) {\r\n\r\n            this.setState({\r\n                'equation': equation + ' 0' + val\r\n            });\r\n\r\n        } else if (equation.match(/\\d+\\.\\d*$/)) {\r\n\r\n            return;\r\n        \r\n        } else {\r\n\r\n            this.setState({\r\n                'equation': equation + val\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    calculate(equation) {\r\n\r\n        let solving = equation.split(' ');\r\n\r\n        console.log(solving);\r\n\r\n        for (let i = 0; i < solving.length; i++) {\r\n\r\n            if (solving[i] === '*') {\r\n\r\n                solving[i-1] = String(+solving[i-1] * +solving[i+1]);\r\n                solving.splice(i, 2);\r\n                i--;\r\n\r\n            } else if (solving[i] === '/') {\r\n\r\n                solving[i-1] = String(+solving[i-1] / +solving[i+1]);\r\n                solving.splice(i, 2);\r\n                i--;\r\n\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < solving.length; i++) {\r\n\r\n            if (solving[i] === '+') {\r\n\r\n                solving[i-1] = String(+solving[i-1] + +solving[i+1]);\r\n                solving.splice(i, 2);\r\n                i--;\r\n\r\n            } else if (solving[i] === '-') {\r\n\r\n                solving[i-1] = String(+solving[i-1] - +solving[i+1]);\r\n                solving.splice(i, 2);\r\n                i--;\r\n\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            'equation': solving[0]\r\n        });\r\n\r\n    }\r\n    \r\n    pressButton(e) {\r\n\r\n        const equation = this.state.equation;\r\n        const val = e.target.value;\r\n\r\n        if (val === \"clear\") {\r\n\r\n            this.setState({\r\n                'equation': '0'\r\n            });\r\n\r\n        } else if (val.match(/\\./)) {\r\n          \r\n            this.handleDecimal(val, equation);    \r\n\r\n        } else if (val.match(/[0-9]/)) {\r\n\r\n            this.handleDigits(val, equation);\r\n\r\n        } else if (val.match(/[+\\*\\-\\/]/)){\r\n\r\n            this.handleOperator(val, equation);          \r\n\r\n        } else if (val.match(/=/)) {\r\n\r\n            this.calculate(equation);\r\n            \r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n              \r\n\r\n        return (\r\n\r\n            <div id=\"calculator\">\r\n\r\n                <Display \r\n                    equation={this.state.equation}\r\n                />\r\n\r\n                <KeyPad \r\n                    pressButton={this.pressButton}\r\n                />\r\n\r\n            </div>\r\n            \r\n        );\r\n\r\n    };\r\n}\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <Calculator />,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}